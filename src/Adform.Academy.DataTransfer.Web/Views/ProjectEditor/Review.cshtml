@using Adform.Academy.DataTransfer.Core.DTO.Models
@using Adform.Academy.DataTransfer.WebApi.Contracts.Projects
@model Adform.Academy.DataTransfer.Web.Models.ProjectEditorModel
@{
    ViewBag.Title = "Review project settings";
}

<div class="bCenter">
    <div class="round bTitle">
        @ViewBag.Title
    </div>
    <div class="round bFull" id="right-panel">
        <ul>
            <li><b>Project Name:</b> @Model.ProjectName</li>
            <li><b>Source Database:</b> @Model.SourceDatabaseName</li>
            <li><b>Target Database:</b> @Model.DestinationDatabaseName</li>
        </ul>
        
        <hr />
        @foreach (FilterItem filter in Model.Filters)
        {
            <ul>
                <li>
                    <b>@filter.TableName</b>
                    <ul>
                        <li style="color: darkgray"><b>Index Field:</b> @filter.FilterValue.IndexColumn [@filter.Columns.First(c => c.ColumnName == filter.FilterValue.IndexColumn).ColumnType]</li>
                        <li style ="color: darkgray"><b>Step Size:</b> @filter.FilterValue.IndexStepName</li>
                        <li style ="color: darkgray"><b>Selected Fields:</b> @String.Join(", ", filter.Columns.Select(c => c.ColumnName))</li>
                    </ul>
                </li>
            </ul>
        }
    </div>
    <div class="round bFull" id="bottom-panel">
        <div style="float: left">
            <button id="back-button" type="button" onclick="history.go(-1)">Back</button>
        </div>
        <div style="float: right;">
            <button id="next-button" type="button" onclick="$('#modelstate-form').submit()">Save</button>
        </div>
        <div class="bClear"></div>
    </div>

    @Html.Partial("ErrorPane")
</div>



@using (Html.BeginForm("Save", "ProjectEditor", FormMethod.Post, new { id = "modelstate-form" }))
{
    @Html.HiddenFor(x => x.ProjectId)
    @Html.HiddenFor(x => x.ProjectName)
    @Html.HiddenFor(x => x.SourceDatabaseId)
    @Html.HiddenFor(x => x.DestinationDatabaseId)

    @Html.HiddenFor(x => x.FiltersJson)
}